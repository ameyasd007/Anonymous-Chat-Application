<!DOCTYPE html>
<html>

<head>
  <title>Simple Group Chat on Node.js</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font: 13px Helvetica, Arial;
    }

    .bottom {
      position: fixed;
      bottom: 0;
      width: 100%;

    }

    form {
      background: #fff;
      padding: 3px;

      border-color: #000;
      border-top-style: solid;
      border-top-width: 1px;
    }

    form input {
      border-style: solid;
      border-width: 1px;
      padding: 10px;
      width: 85%;
      margin-right: .5%;
    }

    form button {
      width: 9%;
      background: rgb(130, 224, 255);
      border: none;
      padding: 10px;
      margin-left: 2%;
    }

    #messages {
      list-style-type: none;
      margin: 0;
      padding: 0;
    }

    #messages li {
      padding: 5px 10px;
    }

    #messages li:nth-child(odd) {
      background: #eee;
    }
  </style>
  <script src="../../socket.io/socket.io.js"></script>
  <script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
</head>

<body>
  <ul id="messages"></ul>
  <div class="bottom">
    <input type="button" value="BRB" id="brb" />
    <input type="button" value="Yes" id="yes" />
    <input type="button" value="Dot" id="dot" />
    <form action="/" method="POST" id="chatForm">
      <input id="txt" autocomplete="off" autofocus="on" placeholder="type your message here..." /><button>Send</button>
    </form>
  </div>

  <script>

    var url = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');
    // var url = 'http://anonymouschatappnodejs-env.eba-6wpc9wb2.ap-south-1.elasticbeanstalk.com/';
    // var url = 'http://localhost:8080/';

    var audio = new Audio('juntos.mp3');


    let username;
    let chatroomName;
    var isNewChatroom = confirm("Create new chatroom? Click cancel if you want to join existing one.");
    if (isNewChatroom) {
      chatroomName = prompt('Name of new chatroom');
      username = prompt('Please tell me your name');

      var socket = io.connect(url);
      socket.emit('join_chat', chatroomName, username);
    } else {
      chatroomName = prompt('Name of chatroom you want to join');
      username = prompt('Please tell me your name');

      var socket = io.connect(url);
      socket.emit('join_chat', chatroomName, username);

    }

    // submit text message without reload/refresh the page
    $('form').submit(function (e) {
      e.preventDefault(); // prevents page reloading
      socket.emit('chat_message', $('#txt').val());
      $('#txt').val('');
      return false;
    });

    $('#brb').click(() => {
      socket.emit('chat_message', 'BRB');
    });

    $('#yes').click(() => {
      socket.emit('chat_message', 'Yes');
    });

    $('#dot').click(() => {
      socket.emit('chat_message', '.');
    });

    // append the chat text message
    socket.on('chat_message', function (msg) {
      $('#messages').append($('<li>').html(msg));

      if (!msg.includes(username))
        audio.play();
    });

    // append text if someone is online
    socket.on('is_online', function (username) {
      $('#messages').append($('<li>').html(username));
    });




  </script>
</body>

</html>